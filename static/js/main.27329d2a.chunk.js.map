{"version":3,"sources":["Covid.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","Covid","props","classes","useState","coviddata","setCoviddata","country","setCountry","className","noValidate","autoComplete","align","style","color","fontSize","fontWeight","TextField","id","name","onChange","event","target","value","label","variant","Button","type","onClick","e","preventDefault","axios","get","then","response","data","console","log","height","rowData","pagination","paginationPageSize","field","sortable","filter","resizable","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,aAiGEC,MA3Ff,SAAeC,GACX,IAAMC,EAAUT,IAChB,EAAiCU,mBAAS,IAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA6BF,mBAAS,SAAtC,mBAAOG,EAAP,KAAeC,EAAf,KAyBA,OACA,gCACA,uBAAMC,UAAWN,EAAQN,KAAMa,YAAU,EAACC,aAAa,MAAvD,UACA,qBAAKC,MAAM,SAASC,MAAO,CAACC,MAAM,iBAAiBC,SAAS,GAAGC,WAAW,QAA1E,0CAGA,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,KAAK,UAAWC,SAvBnD,SAAsBC,GAEtBb,EAAWa,EAAMC,OAAOC,QAqBoDC,MAAM,eAAeC,QAAQ,gBALrG,WASQ,cAACC,EAAA,EAAD,CAAQD,QAAQ,YAAYE,KAAK,SAASC,QArBtD,SAAmBC,GAEnBA,EAAEC,iBAEEC,IACGC,IAAI,2CAA4CzB,EAAS,qBACzD0B,MAAK,SAAAC,GAAQ,OAAI5B,EAAa4B,EAASC,SACxCC,QAAQC,IAAIhC,IAcwDS,MAAM,YAApE,+CAIZ,8BACA,mCAAQ,qBAAKF,MAAM,SAASC,MAAO,CAACC,MAAM,MAAMC,SAAS,GAAGC,WAAW,QAA/D,kCACR,uBACA,uBACA,qBAAKP,UAAU,kBAAkBI,MAAO,CAAEyB,OAAQ,IAAKtC,MAAO,MAA9D,SACI,eAAC,cAAD,CACIuC,QAASlC,EACTmC,YAAY,EACLC,mBAAoB,EAH/B,UAII,cAAC,eAAD,CAAcC,MAAM,UAAUC,UAAU,EAAMC,QAAQ,EAAMC,WAAW,IAEvE,cAAC,eAAD,CAAcH,MAAM,SAASC,UAAU,EAAMC,QAAQ,EAAMC,WAAW,IACtE,cAAC,eAAD,CAAcH,MAAM,YAAYC,UAAU,EAAMC,QAAQ,EAAMC,WAAW,IACzE,cAAC,eAAD,CAAcH,MAAM,SAASC,UAAU,EAAMC,QAAQ,EAAMC,WAAW,IACtE,cAAC,eAAD,CAAcH,MAAM,YAAYC,UAAU,EAAMC,QAAQ,EAAMC,WAAW,IAEzE,cAAC,eAAD,CAAcH,MAAM,OAAOC,UAAU,EAAMC,QAAQ,EAAMC,WAAW,IACpE,cAAC,eAAD,CAAcH,MAAM,WAAWC,UAAU,EAAMC,QAAQ,EAAMC,WAAW,SAGhF,qBAAKjC,MAAM,SAASC,MAAO,CAACC,MAAM,aAAaC,SAAS,GAAGC,WAAW,QAAtE,uDACA,qBAAKJ,MAAM,SAASC,MAAO,CAACC,MAAM,WAAWC,SAAS,GAAGC,WAAW,QAApE,mFAEA,uBAEA,oBAAIhB,MAAO,MAxBX,gBA0Ba,kDACb,uBACA,oBAAIA,MAAO,eClFI8C,MANf,WACE,OACA,cAAC,EAAD,KCKaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.27329d2a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\n\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n     \r\n    },\r\n  },\r\n}));\r\n\r\nfunction Covid(props) {\r\n    const classes = useStyles();\r\n    const [coviddata,setCoviddata] = useState([]);\r\n    const [country,setCountry] = useState(\"india\");\r\n   \r\n  {/*    axios\r\n      .get(\"https://api.covid19api.com/live/country/\"+(country)+\"/status/confirmed\")\r\n      .then(response => setCoviddata(response.data));\r\n  console.log(coviddata); */} \r\n \r\n\r\nfunction handleChange(event)\r\n{\r\nsetCountry(event.target.value);\r\n   // console.log(event.target.value);\r\n}\r\n//console.log(coviddata);\r\nfunction Updateapi(e)\r\n{\r\ne.preventDefault();\r\n\r\n    axios\r\n      .get(\"https://api.covid19api.com/live/country/\"+(country)+\"/status/confirmed\")\r\n      .then(response => setCoviddata(response.data));\r\n      console.log(coviddata);\r\n \r\n}\r\n   \r\n    return (\r\n    <div>\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n    <div align=\"center\" style={{color:\"cornflowerblue\",fontSize:15,fontWeight:\"bold\"}}>Enter Country Name Ex: india</div>\r\n   \r\n   \r\n    <TextField id=\"outlined-basic\" name=\"country\"  onChange={handleChange}  label=\"Country Name\" variant=\"outlined\" />\r\n  </form>\r\n\r\n{/* <button type=\"submit\" onClick={Updateapi}></button>*/}  \r\n&nbsp;&nbsp;<Button variant=\"contained\" type=\"submit\" onClick={Updateapi} color=\"secondary\">\r\n&nbsp;&nbsp;&nbsp; Submit &nbsp;&nbsp; &nbsp;\r\n</Button>\r\n\r\n<div>\r\n<center><div align=\"center\" style={{color:\"red\",fontSize:25,fontWeight:\"bold\"}}>World Covid Tracker </div>\r\n<br></br>\r\n<br></br>\r\n<div className=\"ag-theme-alpine\" style={{ height: 400, width: 1200 }}>\r\n    <AgGridReact\r\n        rowData={coviddata}\r\n        pagination={true}\r\n               paginationPageSize={7}>\r\n        <AgGridColumn field=\"Country\" sortable={true} filter={true} resizable={true}></AgGridColumn>\r\n        \r\n        <AgGridColumn field=\"Deaths\" sortable={true} filter={true} resizable={true}></AgGridColumn>\r\n        <AgGridColumn field=\"Confirmed\" sortable={true} filter={true} resizable={true}></AgGridColumn>\r\n        <AgGridColumn field=\"Active\" sortable={true} filter={true} resizable={true}></AgGridColumn>\r\n        <AgGridColumn field=\"Recovered\" sortable={true} filter={true} resizable={true}></AgGridColumn>\r\n        \r\n        <AgGridColumn field=\"Date\" sortable={true} filter={true} resizable={true}></AgGridColumn>\r\n        <AgGridColumn field=\"Province\" sortable={true} filter={true} resizable={true}></AgGridColumn>\r\n    </AgGridReact>\r\n</div>\r\n<div align=\"center\" style={{color:\"dodgerblue\",fontSize:14,fontWeight:\"bold\"}}>Please Note : Data showing as Grand Total</div>\r\n<div align=\"center\" style={{color:\"seagreen\",fontSize:14,fontWeight:\"bold\"}}>Filter by clicking \r\ncolumn header 3 bars | Sort by Clicking ColumnName</div>\r\n<br>\r\n</br>\r\n<hr width={250}></hr>\r\n\r\nDeveloped By <i>Safwan Mannambath</i>\r\n<br></br>\r\n<hr width={250}></hr>\r\n</center>\r\n\r\n</div>\r\n{/* \r\n    This part is displaying as map function same data above\r\n  <div>\r\n    {coviddata.map((person, index) => (\r\n        <p key={index}>-{person.Country} -{person.Deaths}!</p>\r\n    ))}\r\n    </div>);\r\n*/}  \r\n\r\n\r\n  </div>\r\n\r\n);\r\n\r\n}\r\n\r\nexport default Covid;","\nimport './App.css';\n\nimport Covid from './Covid';\n\nfunction App() {\n  return (\n  <Covid></Covid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}